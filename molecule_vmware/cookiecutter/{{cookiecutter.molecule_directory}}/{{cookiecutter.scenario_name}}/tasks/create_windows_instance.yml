---
{% raw -%}
- name: Create molecule instance(s)
  vmware_guest:
    hostname: "{{ molecule_yml.driver.vcenter_hostname }}"
    username: "{{ molecule_yml.driver.vcenter_username }}"
    password: "{{ molecule_yml.driver.vcenter_password }}"
    validate_certs: "{{ molecule_yml.driver.validate_certs | default(false) }}"
    datacenter: "{{ molecule_yml.driver.datacenter }}"
    cluster: "{{ molecule_yml.driver.cluster | default(omit) }}"
    esxi_hostname: "{{ molecule_yml.driver.esxi_hostname | default(omit) }}"
    folder: "{{ molecule_yml.driver.folder }}"
    name: "{{ item.name }}"
    template: "{{ item.template }}"
    snapshot_src: "{{ item.snapshot_src | default(omit) }}"
    hardware: "{{ item.hardware | default(omit) }}"
    networks: "{{ item.networks }}"
    resource_pool: "{{ item.resource_pool | default(omit) }}"
    customization:
      hostname: "{{ item.name }}"
      autologon: false
      autologoncount: 1
      fullname: "{{ item.customization.fullname | default('molecule') }}"
      orgname: "{{ item.customization.orgname | default('molecule') }}"
      password: "{{ molecule_yml.driver.vm_password }}"
      dns_servers: "{{ molecule_yml.driver.dns_servers | default(omit) }}"
    wait_for_ip_address: true
    wait_for_customization: true
    state: poweredon
  no_log: true
  async: 7200
  poll: 0
  register: async_results
  loop: "{{ molecule_yml.platforms }}"

- name: Check the test instance creation status
  async_status:
    jid: "{{ item.ansible_job_id }}"
  loop: "{{ async_results.results }}"
  register: server
  until: server.finished
  delay: 10
  retries: 300
  notify:
    - "Populate instance config dict for windows"
    - "Convert instance config dict to a list"
    - "Dump instance config"

- name: Check vmware tools status
  vmware_guest_info:
    hostname: "{{ molecule_yml.driver.vcenter_hostname }}"
    username: "{{ molecule_yml.driver.vcenter_username }}"
    password: "{{ molecule_yml.driver.vcenter_password }}"
    validate_certs: "{{ molecule_yml.driver.validate_certs | default(false) }}"
    datacenter: "{{ molecule_yml.driver.datacenter }}"
    folder: "{{ molecule_yml.driver.folder }}"
    name: "{{ item.name }}"
  no_log: true
  register: guest_state
  until: "guest_state.instance.guest_tools_status == 'guestToolsRunning'"
  delay: 10
  retries: 300
  loop: "{{ molecule_yml.platforms }}"
  ignore_errors: true

- name: Enable WinRM
  vmware_vm_shell:
    hostname: "{{ molecule_yml.driver.vcenter_hostname }}"
    username: "{{ molecule_yml.driver.vcenter_username }}"
    password: "{{ molecule_yml.driver.vcenter_password }}"
    validate_certs: "{{ molecule_yml.driver.validate_certs | default(false) }}"
    datacenter: "{{ molecule_yml.driver.datacenter }}"
    vm_id: "{{ item.name }}"
    vm_username: "{{ molecule_yml.driver.vm_username }}"
    vm_password: "{{ molecule_yml.driver.vm_password }}"
    vm_shell: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"
    vm_shell_args: >-
      -c "&{
             # certificate variables
             $hostname = $ENV:COMPUTERNAME
             $cert_path = \"cert:\LocalMachine\My\"
             $key_length = 4096
             $cert_enabling_duration = (Get-Date).AddYears(1)

             # Generate self-sign certificate
             $cert = New-SelfSignedCertificate -Subject $hostname -DnsName $hostname -CertStoreLocation $cert_path `
                     -KeyAlgorithm RSA -KeyLength $key_length -KeyExportPolicy Exportable `
                     -NotAfter $cert_enabling_duration

             # Enable WinRM(HTTPS)
             $valueset = @{
                     Hostname = $hostname
                     CertificateThumbprint = $cert.Thumbprint
             }
             $selectorset = @{
                 Transport = \"HTTPS\"
                 Address = \"*\"
             }

             New-WSManInstance -ResourceURI 'winrm/config/Listener' -SelectorSet $selectorset -ValueSet $valueset
         }"
    wait_for_process: true
  no_log: true
  loop: "{{ molecule_yml.platforms }}"

- name: Disable Windows Firewall
  vmware_vm_shell:
    hostname: "{{ molecule_yml.driver.vcenter_hostname }}"
    username: "{{ molecule_yml.driver.vcenter_username }}"
    password: "{{ molecule_yml.driver.vcenter_password }}"
    validate_certs: "{{ molecule_yml.driver.validate_certs | default(false) }}"
    datacenter: "{{ molecule_yml.driver.datacenter }}"
    vm_id: "{{ item.name }}"
    vm_username: "{{ molecule_yml.driver.vm_username }}"
    vm_password: "{{ molecule_yml.driver.vm_password }}"
    vm_shell: "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"
    vm_shell_args: "-Command Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False"
    wait_for_process: true
  no_log: true
  loop: "{{ molecule_yml.platforms }}"
{%- endraw %}
